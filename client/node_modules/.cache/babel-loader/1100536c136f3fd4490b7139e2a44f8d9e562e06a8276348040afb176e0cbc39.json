{"ast":null,"code":"//! ### ALERT COMPONENT ###\n//? This component is used to display the alert message when the user adds a coin to the watchlist or removes a coin from the watchlist.\n//? The alert message is displayed for 2 seconds and then disappears.\n//? The alert message is displayed at the top of the screen.\n//? The alert message is displayed in a snackbar.\nimport React from\"react\";import{CryptoState}from\"../Pages/CryptoContext\";import Snackbar from\"@mui/material/Snackbar\";import MuiAlert from\"@mui/material/Alert\";import{jsx as _jsx}from\"react/jsx-runtime\";var Alert=function Alert(){var _CryptoState=CryptoState(),alert=_CryptoState.alert,setAlert=_CryptoState.setAlert;// import the alert state from the CryptoContext\nvar handleClose=function handleClose(event,reason){if(reason===\"clickaway\"){return;}setAlert({open:false});};return/*#__PURE__*/_jsx(Snackbar,{open:alert.open,autoHideDuration:2000,onClose:handleClose,children:/*#__PURE__*/_jsx(MuiAlert,{onClose:handleClose,severity:alert.type,elevation:10,variant:\"filled\",children:alert.message})});};export default Alert;","map":{"version":3,"names":["React","CryptoState","Snackbar","MuiAlert","jsx","_jsx","Alert","_CryptoState","alert","setAlert","handleClose","event","reason","open","autoHideDuration","onClose","children","severity","type","elevation","variant","message"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/components/Alert.js"],"sourcesContent":["//! ### ALERT COMPONENT ###\n//? This component is used to display the alert message when the user adds a coin to the watchlist or removes a coin from the watchlist.\n//? The alert message is displayed for 2 seconds and then disappears.\n//? The alert message is displayed at the top of the screen.\n//? The alert message is displayed in a snackbar.\n\nimport React from \"react\";\nimport { CryptoState } from \"../Pages/CryptoContext\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nconst Alert = () => {\n  const { alert, setAlert } = CryptoState(); // import the alert state from the CryptoContext\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert({ open: false });\n  };\n\n  return (\n    <Snackbar open={alert.open} autoHideDuration={2000} onClose={handleClose}>\n      <MuiAlert\n        onClose={handleClose}\n        severity={alert.type}\n        elevation={10}\n        variant=\"filled\"\n      >\n        {alert.message}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default Alert;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3C,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAA,CAAS,CAClB,IAAAC,YAAA,CAA4BN,WAAW,CAAC,CAAC,CAAjCO,KAAK,CAAAD,YAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,YAAA,CAARE,QAAQ,CAAoB;AAE3C,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACrC,GAAIA,MAAM,GAAK,WAAW,CAAE,CAC1B,OACF,CAEAH,QAAQ,CAAC,CAAEI,IAAI,CAAE,KAAM,CAAC,CAAC,CAC3B,CAAC,CAED,mBACER,IAAA,CAACH,QAAQ,EAACW,IAAI,CAAEL,KAAK,CAACK,IAAK,CAACC,gBAAgB,CAAE,IAAK,CAACC,OAAO,CAAEL,WAAY,CAAAM,QAAA,cACvEX,IAAA,CAACF,QAAQ,EACPY,OAAO,CAAEL,WAAY,CACrBO,QAAQ,CAAET,KAAK,CAACU,IAAK,CACrBC,SAAS,CAAE,EAAG,CACdC,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAEfR,KAAK,CAACa,OAAO,CACN,CAAC,CACH,CAAC,CAEf,CAAC,CAED,cAAe,CAAAf,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}