{"ast":null,"code":"var _jsxFileName = \"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/components/CoinInfo.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport { CircularProgress, Typography, ThemeProvider } from \"@mui/material\";\nimport { styled, createTheme } from \"@mui/material/styles\";\nimport SelectButton from \"./SelectButton\";\nimport { chartDays } from \"../config/data\";\nimport { CryptoState } from \"../Pages/CryptoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CoinContainer = styled(\"div\")(({\n  theme\n}) => ({\n  width: \"75%\",\n  // width of the container.\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginTop: 25,\n  padding: 40,\n  [theme.breakpoints.down(\"md\")]: {\n    // when the screen is medium size, the width of the container becomes 100%.\n    width: \"100%\",\n    marginTop: 0,\n    // no need for margin or padding on smaller screens\n    padding: 20,\n    paddingTop: 0\n  }\n}));\n_c = CoinContainer;\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  }\n});\nconst CoinInfo = ({\n  coin\n}) => {\n  _s();\n  const [historicData, setHistoricData] = useState(); // state to store the historical data of the coin.\n  const [days, setDays] = useState(1); // display price action for the last 24 hours by default.\n  const {\n    currency\n  } = CryptoState(); // get the currency from the context API\n  const [flag, setFlag] = useState(false); // flag to check if the data is fetched or not.\n\n  const fetchHistoricData = async () => {\n    //!Loggin the request URL for debugging purposes\n    console.log(HistoricalChart(coin.id, days, currency));\n    console.log(\"Coin ID:\", coin.id);\n    console.log(\"Days:\", days);\n    console.log(\"Currency:\", currency);\n    // \n\n    // function to fetch the historical data of the coin, using the HistoricalChart API.\n    const {\n      data\n    } =\n    //! TESTING CODE\n\n    //! ORIGINAL CODE\n    await axios.get(HistoricalChart(coin.id, days, currency)); // get the data from the API (using axios), display the did, days and currency.\n    setFlag(true);\n    setHistoricData(data.prices); // we just want the prices from the data, so we set the state to data.prices.\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days]); // we want to fetch the data whenever the days change.\n\n  return (\n    /*#__PURE__*/\n    // importing the dark theme from MUI and wrapping the component in the ThemeProvider.\n    _jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: /*#__PURE__*/_jsxDEV(CoinContainer, {\n        children: !historicData || flag === false ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            color: \"gold\"\n          },\n          size: 250,\n          thickness: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this) :\n        /*#__PURE__*/\n        // if the data is not fetched, display a circular progress ba, otherwise display the chart.\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              marginTop: 20,\n              justifyContent: \"space-around\",\n              width: \"100%\"\n            },\n            children: chartDays.map((day // map through the chartDays array and return the days. File is in config/data.js, to make it easier to change the days.\n            ) => /*#__PURE__*/_jsxDEV(SelectButton, {\n              // key is the value of the day.\n              onClick: () => {\n                // and when the button is clicked, set the days to the value of the day, and set the flag to false.\n                setDays(day.value);\n                setFlag(false);\n              },\n              selected: day.value === days,\n              children: day.label\n            }, day.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CoinInfo, \"5cevX/o6qRszNhNoUf2b8VPdjTg=\");\n_c2 = CoinInfo;\nexport default CoinInfo;\nvar _c, _c2;\n$RefreshReg$(_c, \"CoinContainer\");\n$RefreshReg$(_c2, \"CoinInfo\");","map":{"version":3,"names":["axios","useEffect","useState","HistoricalChart","Line","CircularProgress","Typography","ThemeProvider","styled","createTheme","SelectButton","chartDays","CryptoState","jsxDEV","_jsxDEV","Fragment","_Fragment","CoinContainer","theme","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","_c","darkTheme","palette","primary","main","type","CoinInfo","coin","_s","historicData","setHistoricData","days","setDays","currency","flag","setFlag","fetchHistoricData","console","log","id","data","get","prices","children","style","color","size","thickness","fileName","_jsxFileName","lineNumber","columnNumber","map","day","onClick","value","selected","label","_c2","$RefreshReg$"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/components/CoinInfo.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport { CircularProgress, Typography, ThemeProvider } from \"@mui/material\";\nimport { styled, createTheme } from \"@mui/material/styles\";\nimport SelectButton from \"./SelectButton\";\nimport { chartDays } from \"../config/data\";\nimport { CryptoState } from \"../Pages/CryptoContext\";\n\nconst CoinContainer = styled(\"div\")(({ theme }) => ({\n  width: \"75%\", // width of the container.\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginTop: 25,\n  padding: 40,\n  [theme.breakpoints.down(\"md\")]: {\n    // when the screen is medium size, the width of the container becomes 100%.\n    width: \"100%\",\n    marginTop: 0, // no need for margin or padding on smaller screens\n    padding: 20,\n    paddingTop: 0,\n  },\n}));\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\",\n    },\n    type: \"dark\",\n  },\n});\n\nconst CoinInfo = ({ coin }) => {\n  const [historicData, setHistoricData] = useState(); // state to store the historical data of the coin.\n  const [days, setDays] = useState(1); // display price action for the last 24 hours by default.\n  const { currency } = CryptoState(); // get the currency from the context API\n  const [flag, setFlag] = useState(false); // flag to check if the data is fetched or not.\n\n  const fetchHistoricData = async () => {\n     //!Loggin the request URL for debugging purposes\n     console.log(HistoricalChart(coin.id, days, currency));\n     console.log(\"Coin ID:\", coin.id);\n     console.log(\"Days:\", days);\n     console.log(\"Currency:\", currency);\n     // \n\n    // function to fetch the historical data of the coin, using the HistoricalChart API.\n    const { data } = \n  //! TESTING CODE\n\n    \n    //! ORIGINAL CODE\n    await axios.get(HistoricalChart(coin.id, days, currency)); // get the data from the API (using axios), display the did, days and currency.\n    setFlag(true);\n    setHistoricData(data.prices); // we just want the prices from the data, so we set the state to data.prices.\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days]); // we want to fetch the data whenever the days change.\n\n  return (\n    // importing the dark theme from MUI and wrapping the component in the ThemeProvider.\n    <ThemeProvider theme={darkTheme}>\n      <CoinContainer>\n        {!historicData || flag === false ? (\n          <CircularProgress\n            style={{ color: \"gold\" }}\n            size={250}\n            thickness={1}\n          />\n        ) : (\n          // if the data is not fetched, display a circular progress ba, otherwise display the chart.\n          <>\n\n{/* ISSUE FROM HERE */}\n\n            {/* Chart */}\n            {/* <Line\n              data={{\n                labels: historicData.map((coin) => {  // map through the historic data and return the date and time of the coin.\n                  let date = new Date(coin[0]);  // the date is in UNIX format, so we convert it to a readable format (the 0 index is the date, the 1 index is the price)\n                  let time =  // vanilla JS to convert the time to AM/PM format.\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                  return days === 1 ? time : date.toLocaleDateString();  // datasets below\n                }),\n\n                datasets: [\n                  {\n                    data: historicData.map((coin) => coin[1]),  // take price (index 1) from the historic data, and map through it.\n                    label: `Price ( Past ${days} Days ) in ${currency}`,   // labels in the past ${days} days in ${currency}\n                    borderColor: \"#EEBC1D\",\n                  },\n                ],\n              }}\n              options={{  // to remove the legend, and to make the chart responsive, and get rid of the gridlines.\n                elements: {\n                  point: {\n                    radius: 1,\n                  },\n                },\n              }}\n            /> */}\n\n{/* ISSUE TO HERE */}\n\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: 20,\n                justifyContent: \"space-around\",\n                width: \"100%\",\n              }}\n            >\n              {chartDays.map(\n                (\n                  day // map through the chartDays array and return the days. File is in config/data.js, to make it easier to change the days.\n                ) => (\n                  <SelectButton\n                    key={day.value} // key is the value of the day.\n                    onClick={() => {\n                      // and when the button is clicked, set the days to the value of the day, and set the flag to false.\n                      setDays(day.value);\n                      setFlag(false);\n                    }}\n                    selected={day.value === days}\n                  >\n                    {day.label}\n                  </SelectButton>\n                )\n              )}\n            </div>\n          </>\n        )}\n      </CoinContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}