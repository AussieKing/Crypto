{"ast":null,"code":"import _regeneratorRuntime from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import{Button,LinearProgress,Typography}from\"@mui/material\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{styled}from\"@mui/system\";import parse from\"html-react-parser\";// gets rid of the html tags in the description of the data returned from the API\nimport CoinInfo from\"../components/CoinInfo\";import{SingleCoin}from\"../config/api\";import{numberWithCommas}from\"../components/Banner/Carousel\";import{CryptoState}from\"./CryptoContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CoinContainer=styled(\"div\")(function(_ref){var theme=_ref.theme;return _defineProperty({display:\"flex\"},theme.breakpoints.down(\"md\"),{flexDirection:\"column\",alignItems:\"center\"});});var CoinSidebar=styled(\"div\")(function(_ref3){var _ref4;var theme=_ref3.theme;return _ref4={width:\"30%\"},_defineProperty(_ref4,theme.breakpoints.down(\"md\"),{width:\"100%\"}),_defineProperty(_ref4,\"display\",\"flex\"),_defineProperty(_ref4,\"flexDirection\",\"column\"),_defineProperty(_ref4,\"alignItems\",\"center\"),_defineProperty(_ref4,\"marginTop\",25),_defineProperty(_ref4,\"borderRight\",\"2px solid grey\"),_ref4;});var CoinHeading=styled(Typography)(function(_ref5){var theme=_ref5.theme;return{fontWeight:\"bold\",marginBottom:20,fontFamily:\"Montserrat\"};});var CoinDescription=styled(Typography)(function(_ref6){var theme=_ref6.theme;return{width:\"100%\",fontFamily:\"Montserrat\",padding:25,paddingBottom:15,paddingTop:0,textAlign:\"justify\"};});var CoinMarketData=styled(\"div\")(function(_ref7){var _ref8;var theme=_ref7.theme;return _ref8={alignSelf:\"start\",padding:25,paddingTop:10,width:\"100%\"},_defineProperty(_ref8,theme.breakpoints.down(\"md\"),{// for medium screens and below\ndisplay:\"flex\",// display the data in a row and flex\njustifyContent:\"space-around\"}),_defineProperty(_ref8,theme.breakpoints.down(\"sm\"),{// for small screens and below\nflexDirection:\"column\",// display the data in a column\nalignItems:\"center\"}),_defineProperty(_ref8,theme.breakpoints.down(\"xs\"),{// for extra small screens and below\nalignItems:\"start\"// align the data to the start\n}),_ref8;});//TODO : This is the function for the database : currently setup in Firebase. Need to refactor it to work with MongoDB\n// const addToWatchlist = async (coin) => {\n//   try {\n//     let watchlist = await Watchlist.findOne({ userId: user.uid }); // Assuming user has a unique uid\n//     if (!watchlist) {\n//       watchlist = new Watchlist({\n//         userId: user.uid,\n//         coins: [],\n//       });\n//     }\n//     const coinData = {\n//       coinId: coin.id,\n//       name: coin.name,\n//       image: coin.image.large,\n//       currentPrice: coin.market_data.current_price[currency.toLowerCase()],\n//     };\n//     watchlist.coins.push(coinData);\n//     await watchlist.save();\n//     alert(\"Coin added to watchlist!\"); // Provide some feedback to the user\n//   } catch (error) {\n//     console.error(\"Failed to add to watchlist\", error);\n//   }\n// };\n//TODO above - need to setup the database to work with MongoDB\nvar CoinPage=function CoinPage(){var _useParams=useParams(),id=_useParams.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),coin=_useState2[0],setCoin=_useState2[1];var _CryptoState=CryptoState(),currency=_CryptoState.currency,symbol=_CryptoState.symbol,user=_CryptoState.user;var fetchCoin=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(SingleCoin(id));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setCoin(data);case 5:case\"end\":return _context.stop();}},_callee);}));return function fetchCoin(){return _ref9.apply(this,arguments);};}();useEffect(function(){fetchCoin();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);if(!coin)return/*#__PURE__*/_jsx(LinearProgress,{style:{backgroundColor:\"gold\"}});return/*#__PURE__*/_jsxs(CoinContainer,{children:[/*#__PURE__*/_jsxs(CoinSidebar,{children:[/*#__PURE__*/_jsx(\"img\",{src:coin===null||coin===void 0?void 0:coin.image.large,alt:coin===null||coin===void 0?void 0:coin.name,height:\"200\",style:{marginBottom:20}}),/*#__PURE__*/_jsx(CoinHeading,{variant:\"h3\",children:coin===null||coin===void 0?void 0:coin.name}),/*#__PURE__*/_jsxs(CoinDescription,{variant:\"subtitle1\",children:[parse(coin===null||coin===void 0?void 0:coin.description.en.split(\". \")[0]),\" \"]}),/*#__PURE__*/_jsxs(CoinMarketData,{children:[/*#__PURE__*/_jsxs(\"span\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(CoinHeading,{variant:\"h5\",children:\"Rank:\"}),\"\\xA0 \\xA0\",/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{fontFamily:\"Montserrat\"},children:numberWithCommas(coin===null||coin===void 0?void 0:coin.market_cap_rank)})]}),/*#__PURE__*/_jsxs(\"span\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(CoinHeading,{variant:\"h5\",children:\"Current Price:\"}),\"\\xA0 \\xA0\",/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",style:{fontFamily:\"Montserrat\"},children:[symbol,\" \",numberWithCommas(coin===null||coin===void 0?void 0:coin.market_data.current_price[currency.toLowerCase()])]})]}),/*#__PURE__*/_jsxs(\"span\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(CoinHeading,{variant:\"h5\",children:\"Market Cap:\"}),\"\\xA0 \\xA0\",/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",style:{fontFamily:\"Montserrat\"},children:[symbol,\" \",numberWithCommas(coin===null||coin===void 0?void 0:coin.market_data.market_cap[currency.toLowerCase()].toString().slice(0,-6)),\"M\"]})]}),/*#__PURE__*/_jsx(\"span\",{style:{display:\"flex\"},children:user&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{marginTop:2,width:\"100%\",height:40,backgroundColor:\"goldenrod\",color:\"black\",\":hover\":{backgroundColor:\"gold\"}}// onClick={() => addToWatchlist(coin)} //TODO : This is the function for the database : currently setup in Firebase. Need to refactor it to work with MongoDB\n,children:\"Add to Watchlist\"})})]})]}),/*#__PURE__*/_jsx(CoinInfo,{coin:coin})]});};export default CoinPage;","map":{"version":3,"names":["Button","LinearProgress","Typography","axios","useEffect","useState","useParams","styled","parse","CoinInfo","SingleCoin","numberWithCommas","CryptoState","jsx","_jsx","jsxs","_jsxs","CoinContainer","_ref","theme","_defineProperty","display","breakpoints","down","flexDirection","alignItems","CoinSidebar","_ref3","_ref4","width","CoinHeading","_ref5","fontWeight","marginBottom","fontFamily","CoinDescription","_ref6","padding","paddingBottom","paddingTop","textAlign","CoinMarketData","_ref7","_ref8","alignSelf","justifyContent","CoinPage","_useParams","id","_useState","_useState2","_slicedToArray","coin","setCoin","_CryptoState","currency","symbol","user","fetchCoin","_ref9","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_callee$","_context","prev","next","get","sent","stop","apply","arguments","style","backgroundColor","children","src","image","large","alt","name","height","variant","description","en","split","market_cap_rank","market_data","current_price","toLowerCase","market_cap","toString","slice","sx","marginTop","color"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/Pages/CoinPage.js"],"sourcesContent":["import { Button, LinearProgress, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { styled } from \"@mui/system\";\nimport parse from \"html-react-parser\"; // gets rid of the html tags in the description of the data returned from the API\nimport CoinInfo from \"../components/CoinInfo\";\nimport { SingleCoin } from \"../config/api\";\nimport { numberWithCommas } from \"../components/Banner/Carousel\";\nimport { CryptoState } from \"./CryptoContext\";\n \nconst CoinContainer = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CoinSidebar = styled(\"div\")(({ theme }) => ({\n  width: \"30%\",\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"100%\",\n  },\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: 25,\n  borderRight: \"2px solid grey\",\n}));\n\nconst CoinHeading = styled(Typography)(({ theme }) => ({\n  fontWeight: \"bold\",\n  marginBottom: 20,\n  fontFamily: \"Montserrat\",\n}));\n\nconst CoinDescription = styled(Typography)(({ theme }) => ({\n  width: \"100%\",\n  fontFamily: \"Montserrat\",\n  padding: 25,\n  paddingBottom: 15,\n  paddingTop: 0,\n  textAlign: \"justify\",\n}));\n\nconst CoinMarketData = styled(\"div\")(({ theme }) => ({\n  alignSelf: \"start\",\n  padding: 25,\n  paddingTop: 10,\n  width: \"100%\",\n  [theme.breakpoints.down(\"md\")]: {\n    // for medium screens and below\n    display: \"flex\", // display the data in a row and flex\n    justifyContent: \"space-around\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    // for small screens and below\n    flexDirection: \"column\", // display the data in a column\n    alignItems: \"center\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    // for extra small screens and below\n    alignItems: \"start\", // align the data to the start\n  },\n}));\n\n//TODO : This is the function for the database : currently setup in Firebase. Need to refactor it to work with MongoDB\n// const addToWatchlist = async (coin) => {\n//   try {\n//     let watchlist = await Watchlist.findOne({ userId: user.uid }); // Assuming user has a unique uid\n    \n//     if (!watchlist) {\n//       watchlist = new Watchlist({\n//         userId: user.uid,\n//         coins: [],\n//       });\n//     }\n\n//     const coinData = {\n//       coinId: coin.id,\n//       name: coin.name,\n//       image: coin.image.large,\n//       currentPrice: coin.market_data.current_price[currency.toLowerCase()],\n//     };\n\n//     watchlist.coins.push(coinData);\n//     await watchlist.save();\n    \n//     alert(\"Coin added to watchlist!\"); // Provide some feedback to the user\n//   } catch (error) {\n//     console.error(\"Failed to add to watchlist\", error);\n//   }\n// };\n//TODO above - need to setup the database to work with MongoDB\n\nconst CoinPage = () => {\n  const { id } = useParams();\n  const [coin, setCoin] = useState();\n  const { currency, symbol, user } = CryptoState();\n\n  const fetchCoin = async () => {\n    const { data } = await axios.get(SingleCoin(id));\n    setCoin(data);\n  };\n\n  useEffect(() => {\n    fetchCoin();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\n\n  return (\n    <CoinContainer>\n      <CoinSidebar>\n        <img\n          src={coin?.image.large}\n          alt={coin?.name}\n          height=\"200\"\n          style={{ marginBottom: 20 }}\n        />\n        <CoinHeading variant=\"h3\">{coin?.name}</CoinHeading>\n        <CoinDescription variant=\"subtitle1\">\n          {parse(coin?.description.en.split(\". \")[0])}{\" \"}\n          {/* parse the description (in english) of the coin to get rid of the html tags */}\n        </CoinDescription>\n        <CoinMarketData>\n          <span style={{ display: \"flex\" }}>\n            <CoinHeading variant=\"h5\">Rank:</CoinHeading>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {numberWithCommas(coin?.market_cap_rank)}\n            </Typography>\n          </span>\n\n          <span style={{ display: \"flex\" }}>\n            <CoinHeading variant=\"h5\">Current Price:</CoinHeading>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {symbol}{\" \"}\n              {numberWithCommas(\n                coin?.market_data.current_price[currency.toLowerCase()]\n              )}\n            </Typography>\n          </span>\n          <span style={{ display: \"flex\" }}>\n            <CoinHeading variant=\"h5\">Market Cap:</CoinHeading>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: \"Montserrat\",\n              }}\n            >\n              {symbol}{\" \"}\n              {numberWithCommas(\n                coin?.market_data.market_cap[currency.toLowerCase()]\n                  .toString()\n                  .slice(0, -6)\n              )}\n              M\n            </Typography>\n          </span>\n          <span style={{ display: \"flex\" }}>\n          {user && (\n              <Button\n                variant=\"contained\"\n                sx={{\n                  marginTop: 2,\n                  width: \"100%\",\n                  height: 40,\n                  backgroundColor: \"goldenrod\",\n                  color: \"black\",\n                  \":hover\": {\n                  backgroundColor: \"gold\",\n                  },\n                }}\n                // onClick={() => addToWatchlist(coin)} //TODO : This is the function for the database : currently setup in Firebase. Need to refactor it to work with MongoDB\n              >\n                Add to Watchlist\n              </Button>\n            )}\n          </span>\n        </CoinMarketData>\n      </CoinSidebar>\n\n      {/* chart */}\n      <CoinInfo coin={coin} />\n    </CoinContainer>\n  );\n};\n\nexport default CoinPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}