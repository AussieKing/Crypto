{"ast":null,"code":"import _slicedToArray from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//! CRYPTO CONTEXT PAGE\nimport{onAuthStateChanged}from'@firebase/auth';import React,{createContext,useContext,useEffect,useState}from'react';import{auth}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";var Crypto=/*#__PURE__*/createContext();var CryptoContext=function CryptoContext(_ref){var children=_ref.children;// create the state and the functions to update the state for the currency and the symbols\nvar _useState=useState('USD'),_useState2=_slicedToArray(_useState,2),currency=_useState2[0],setCurrency=_useState2[1];var _useState3=useState(\"$\"),_useState4=_slicedToArray(_useState3,2),symbol=_useState4[0],setSymbol=_useState4[1];//TODO : new states for the coins and the loading\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),coins=_useState6[0],setCoins=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),user=_useState10[0],setUser=_useState10[1];var _useState11=useState({open:false,message:'',type:'success'}),_useState12=_slicedToArray(_useState11,2),alert=_useState12[0],setAlert=_useState12[1];// state for the alert snack bar \nuseEffect(function(){// monitor the auth state of the firebase auth\nonAuthStateChanged(auth,function(user){if(user){// if the user exists\nsetUser(user);// set the user state to the user\n}else{// otherwise, set the user state to null\nsetUser(null);}});// takes the auth and gives a callback function\n},[]);useEffect(function(){// useEffect to run whatever is rendered inside the component\n//! POTENTIAL ERROR HERE: do I need to add the fetchCoins function here???\nif(currency==='USD')setSymbol('$');else if(currency==='EUR')setSymbol('€');else if(currency==='GBP')setSymbol('£');else if(currency==='AUD')setSymbol('A$');},[currency]);// adding the currency as a dependency\nreturn/*#__PURE__*/ (// wrapping the whole app in the Crypto context provider\n_jsx(Crypto.Provider,{value:{currency:currency,symbol:symbol,setCurrency:setCurrency,coins:coins,loading:loading,alert:alert,setAlert:setAlert,user:user},children:children}));};export default CryptoContext;export var CryptoState=function CryptoState(){// custom hook to get the state, create a new file called CryptoState.js\nreturn useContext(Crypto);};","map":{"version":3,"names":["onAuthStateChanged","React","createContext","useContext","useEffect","useState","auth","jsx","_jsx","Crypto","CryptoContext","_ref","children","_useState","_useState2","_slicedToArray","currency","setCurrency","_useState3","_useState4","symbol","setSymbol","_useState5","_useState6","coins","setCoins","_useState7","_useState8","loading","setLoading","_useState9","_useState10","user","setUser","_useState11","open","message","type","_useState12","alert","setAlert","Provider","value","CryptoState"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/Pages/CryptoContext.js"],"sourcesContent":["//! CRYPTO CONTEXT PAGE\n\nimport { onAuthStateChanged } from '@firebase/auth';\nimport React, { createContext, useContext, useEffect, useState } from 'react'\nimport { auth } from '../firebase';\n\nconst Crypto = createContext();\n\nconst CryptoContext = ({ children }) => {\n  // create the state and the functions to update the state for the currency and the symbols\n  const [currency, setCurrency] = useState('USD');\n  const [symbol, setSymbol] = useState(\"$\");\n  //TODO : new states for the coins and the loading\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(null);\n  const [alert, setAlert] = useState({open: false, message: '', type: 'success'});  // state for the alert snack bar \n\n  useEffect(() => {  // monitor the auth state of the firebase auth\n    onAuthStateChanged(auth, user => {\n      if (user) {  // if the user exists\n        setUser(user);  // set the user state to the user\n      }\n      else {  // otherwise, set the user state to null\n        setUser(null);\n      }\n    }\n      )  // takes the auth and gives a callback function\n}, [])\n\n  useEffect(() => {  // useEffect to run whatever is rendered inside the component\n  \n  //! POTENTIAL ERROR HERE: do I need to add the fetchCoins function here???\n  if (currency === 'USD') setSymbol('$');\n    else if (currency === 'EUR') setSymbol('€');\n    else if (currency === 'GBP') setSymbol('£');\n    else if (currency === 'AUD') setSymbol('A$');\n  }, [currency]);  // adding the currency as a dependency\n\n  return (  // wrapping the whole app in the Crypto context provider\n  <Crypto.Provider value={{\n    currency, \n    symbol, \n    setCurrency, \n    coins, \n    loading, \n    alert, \n    setAlert,\n    user,\n    }}\n  >\n    {children}\n  </Crypto.Provider>\n  )\n}\n\nexport default CryptoContext;\nexport const CryptoState = () => {   // custom hook to get the state, create a new file called CryptoState.js\n  return useContext(Crypto); \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}