{"ast":null,"code":"var _jsxFileName = \"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/components/SelectButton.js\";\n//\n\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled('span')(({\n  theme,\n  selected\n}) => ({\n  // we want a span element, and we want to pass the theme and selected props.\n  border: \"1px solid gold\",\n  borderRadius: 5,\n  padding: 10,\n  paddingLeft: 20,\n  paddingRight: 20,\n  fontFamily: \"Montserrat\",\n  cursor: \"pointer\",\n  backgroundColor: selected ? \"goldenrod\" : \"\",\n  color: selected ? \"black\" : \"\",\n  fontWeight: selected ? 700 : 500,\n  \"&:hover\": {\n    backgroundColor: \"goldenrod\",\n    color: \"black\"\n  },\n  width: \"22%\"\n  // margin: 5, // Uncomment if you need the margin\n}));\n_c = StyledButton;\nconst SelectButton = ({\n  children,\n  selected,\n  onClick\n}) => {\n  // takes the children, selected and onClick props.\n  return (\n    /*#__PURE__*/\n    // returns the StyledButton component, passing the onClick and selected props.\n    _jsxDEV(StyledButton, {\n      onClick: onClick,\n      selected: selected,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c2 = SelectButton;\nexport default SelectButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"SelectButton\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","StyledButton","theme","selected","border","borderRadius","padding","paddingLeft","paddingRight","fontFamily","cursor","backgroundColor","color","fontWeight","width","_c","SelectButton","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/components/SelectButton.js"],"sourcesContent":["//\n\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledButton = styled('span')(({ theme, selected }) => ({  // we want a span element, and we want to pass the theme and selected props.\n  border: \"1px solid gold\",\n  borderRadius: 5,\n  padding: 10,\n  paddingLeft: 20,\n  paddingRight: 20,\n  fontFamily: \"Montserrat\",\n  cursor: \"pointer\",\n  backgroundColor: selected ? \"goldenrod\" : \"\",\n  color: selected ? \"black\" : \"\",\n  fontWeight: selected ? 700 : 500,\n  \"&:hover\": {\n    backgroundColor: \"goldenrod\",\n    color: \"black\",\n  },\n  width: \"22%\",\n  // margin: 5, // Uncomment if you need the margin\n}));\n\nconst SelectButton = ({ children, selected, onClick }) => {  // takes the children, selected and onClick props.\n  return (  // returns the StyledButton component, passing the onClick and selected props.\n    <StyledButton onClick={onClick} selected={selected}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default SelectButton;\n"],"mappings":";AAAA;;AAEA,SAASA,MAAM,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGH,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;EAAEI,KAAK;EAAEC;AAAS,CAAC,MAAM;EAAG;EAC/DC,MAAM,EAAE,gBAAgB;EACxBC,YAAY,EAAE,CAAC;EACfC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE,SAAS;EACjBC,eAAe,EAAER,QAAQ,GAAG,WAAW,GAAG,EAAE;EAC5CS,KAAK,EAAET,QAAQ,GAAG,OAAO,GAAG,EAAE;EAC9BU,UAAU,EAAEV,QAAQ,GAAG,GAAG,GAAG,GAAG;EAChC,SAAS,EAAE;IACTQ,eAAe,EAAE,WAAW;IAC5BC,KAAK,EAAE;EACT,CAAC;EACDE,KAAK,EAAE;EACP;AACF,CAAC,CAAC,CAAC;AAACC,EAAA,GAjBEd,YAAY;AAmBlB,MAAMe,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEd,QAAQ;EAAEe;AAAQ,CAAC,KAAK;EAAG;EAC3D;IAAA;IAAU;IACRlB,OAAA,CAACC,YAAY;MAACiB,OAAO,EAAEA,OAAQ;MAACf,QAAQ,EAAEA,QAAS;MAAAc,QAAA,EAChDA;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAEnB,CAAC;AAACC,GAAA,GANIP,YAAY;AAQlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}