{"ast":null,"code":"//! APOLLO CLIENT CONFIGURATION\n//? This file is used to configure the Apollo Client\n\nimport { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { auth } from '../firebase';\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:3001/graphql'\n});\nconst authLink = setContext(async (_, {\n  headers\n}) => {\n  var _auth$currentUser;\n  // Get the authentication token from Firebase if it exists\n  const token = await ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.getIdToken());\n  console.log('Token:', token);\n\n  // Return the headers to the context so HTTP link can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"names":["ApolloClient","InMemoryCache","HttpLink","setContext","auth","httpLink","uri","authLink","_","headers","_auth$currentUser","token","currentUser","getIdToken","console","log","authorization","client","link","concat","cache"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/config/apollo.js"],"sourcesContent":["//! APOLLO CLIENT CONFIGURATION\n//? This file is used to configure the Apollo Client\n\nimport { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { auth } from '../firebase';\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:3001/graphql' });\n\nconst authLink = setContext(async (_, { headers }) => {\n  // Get the authentication token from Firebase if it exists\n  const token = await auth.currentUser?.getIdToken();\n  console.log('Token:', token);\n\n\n  // Return the headers to the context so HTTP link can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default client;"],"mappings":"AAAA;AACA;;AAEA,SAASA,YAAY,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACtE,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,IAAI,QAAQ,aAAa;AAElC,MAAMC,QAAQ,GAAG,IAAIH,QAAQ,CAAC;EAAEI,GAAG,EAAE;AAAgC,CAAC,CAAC;AAEvE,MAAMC,QAAQ,GAAGJ,UAAU,CAAC,OAAOK,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAAA,IAAAC,iBAAA;EACpD;EACA,MAAMC,KAAK,GAAG,QAAAD,iBAAA,GAAMN,IAAI,CAACQ,WAAW,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBG,UAAU,CAAC,CAAC;EAClDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;;EAG5B;EACA,OAAO;IACLF,OAAO,EAAE;MACP,GAAGA,OAAO;MACVO,aAAa,EAAEL,KAAK,GAAGA,KAAK,GAAG;IACjC;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMM,MAAM,GAAG,IAAIjB,YAAY,CAAC;EAC9BkB,IAAI,EAAEX,QAAQ,CAACY,MAAM,CAACd,QAAQ,CAAC;EAC/Be,KAAK,EAAE,IAAInB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,eAAegB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}