{"ast":null,"code":"import _regeneratorRuntime from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";//! APOLLO CLIENT CONFIGURATION\n//? This file is used to configure the Apollo Client\nimport{ApolloClient,InMemoryCache,HttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{auth}from'../firebase';var httpLink=new HttpLink({uri:'http://localhost:3001/graphql'});var authLink=setContext(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_,_ref){var _auth$currentUser;var headers,token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:headers=_ref.headers;_context.next=3;return(_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.getIdToken();case 3:token=_context.sent;return _context.abrupt(\"return\",{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?token:\"\"})});case 5:case\"end\":return _context.stop();}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});export default client;","map":{"version":3,"names":["ApolloClient","InMemoryCache","HttpLink","setContext","auth","httpLink","uri","authLink","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","_ref","_auth$currentUser","headers","token","wrap","_callee$","_context","prev","next","currentUser","getIdToken","sent","abrupt","_objectSpread","authorization","stop","_x","_x2","apply","arguments","client","link","concat","cache"],"sources":["/Users/freddydordoni/bootcamp/Project-3-Portfolio-Tracker/client/src/config/apollo.js"],"sourcesContent":["//! APOLLO CLIENT CONFIGURATION\n//? This file is used to configure the Apollo Client\n\nimport { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { auth } from '../firebase';\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:3001/graphql' });\n\nconst authLink = setContext(async (_, { headers }) => {\n  // Get the authentication token from Firebase if it exists\n  const token = await auth.currentUser?.getIdToken();\n\n  // Return the headers to the context so HTTP link can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default client;"],"mappings":"idAAA;AACA;AAEA,OAASA,YAAY,CAAEC,aAAa,CAAEC,QAAQ,KAAQ,gBAAgB,CACtE,OAASC,UAAU,KAAQ,6BAA6B,CACxD,OAASC,IAAI,KAAQ,aAAa,CAElC,GAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAH,QAAQ,CAAC,CAAEI,GAAG,CAAE,+BAAgC,CAAC,CAAC,CAEvE,GAAM,CAAAC,QAAQ,CAAGJ,UAAU,6BAAAK,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAOC,CAAC,CAAAC,IAAA,MAAAC,iBAAA,KAAAC,OAAA,CAAAC,KAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAIN,OAAO,CAAAF,IAAA,CAAPE,OAAO,CAAAI,QAAA,CAAAE,IAAA,UAAAP,iBAAA,CAEzBX,IAAI,CAACmB,WAAW,UAAAR,iBAAA,iBAAhBA,iBAAA,CAAkBS,UAAU,CAAC,CAAC,QAA5CP,KAAK,CAAAG,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UAGJ,CACLV,OAAO,CAAAW,aAAA,CAAAA,aAAA,IACFX,OAAO,MACVY,aAAa,CAAEX,KAAK,CAAGA,KAAK,CAAG,EAAE,EAErC,CAAC,0BAAAG,QAAA,CAAAS,IAAA,MAAAjB,OAAA,GACF,mBAAAkB,EAAA,CAAAC,GAAA,SAAAvB,KAAA,CAAAwB,KAAA,MAAAC,SAAA,QAAC,CAEF,GAAM,CAAAC,MAAM,CAAG,GAAI,CAAAlC,YAAY,CAAC,CAC9BmC,IAAI,CAAE5B,QAAQ,CAAC6B,MAAM,CAAC/B,QAAQ,CAAC,CAC/BgC,KAAK,CAAE,GAAI,CAAApC,aAAa,CAAC,CAC3B,CAAC,CAAC,CAEF,cAAe,CAAAiC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}